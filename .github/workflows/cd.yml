name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed

jobs:
  docker-build-push:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Notify Telegram - CD Pipeline Started
        run: |
          python generate_ps1.py
          pwsh -File SendMessage.ps1
        shell: pwsh
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_MESSAGE: "⚙️ CD Pipeline Started."

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./backend/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/backend:latest
            ${{ secrets.DOCKER_USERNAME }}/backend:${{ github.sha }}
            
      - name: Notify Telegram - push backend image completed
        run: |
          python generate_ps1.py
          pwsh -File SendMessage.ps1
        shell: pwsh
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_MESSAGE: "✅ Backend Docker image pushed to DockerHub successfully."

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./task-manager-frontend
          file: ./task-manager-frontend/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/frontend:latest
            ${{ secrets.DOCKER_USERNAME }}/frontend:${{ github.sha }}

      - name: Notify Telegram - push frontend image completed
        run: |
          python generate_ps1.py
          pwsh -File SendMessage.ps1
        shell: pwsh
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_MESSAGE: "✅ Frontend Docker image pushed to DockerHub successfully."
